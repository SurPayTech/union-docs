{
  "openapi": "3.0.1",
  "info": {
    "title": "“Ist-Pay-Union”",
    "description": "**Istanbul Odeme Payment Hub**\n<table>\n<caption><h2> API Standards </h2></caption>\n<tr><th>Type</th><th>Format</th><th>Example</th></tr>\n<tr><td>Currency Codes</td><td> <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">https://en.wikipedia.org/wiki/ISO_4217</a> </td><td> USD </td></tr>\n<tr><td>Country Codes </td><td> <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1\">https://en.wikipedia.org/wiki/ISO_3166-1</a> (2 Digits) </td><td> US </td></tr>\n<tr><td>Phone Numbers </td><td> <a href=\"https://en.wikipedia.org/wiki/E.164\">https://en.wikipedia.org/wiki/E.164</a> (2 Digit) </td><td>+16175551212</td></tr>\n<tr><td>Date</td><td> YYYY-MM-DD  </td> <td>2023-01-25</td> </tr>\n<tr><td>DateTime(UTC)</td><td> YYYY-MM-DD HH24:MI:SS <td>2023-01-25 16:23:59</td></tr>\n<tr><td>DateTime(Timezone)</td><td> YYYY-MM-DD HH24:MI:SS TZH:TZM <td>2023-01-25 16:23:59 +03:00</td></tr>\n<tr><td>Output DateTime</td><td> YYYY-MM-DD HH24:MI:SS <td>2023-01-25 16:23:59 (Always UTC)</td></tr>\n<tr><td>Errors</td><td> ProblemDetails - <a href=\"https://datatracker.ietf.org/doc/html/rfc7807\">https://datatracker.ietf.org/doc/html/rfc7807</a> </td></tr>\n</table>\n                          ",
    "contact": {
      "name": "UnionService",
      "url": "https://www.ist-pay.com/"
    },
    "license": {
      "name": "License",
      "url": "https://www.ist-pay.com/legal"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/union-service"
    }
  ],
  "paths": {
    "/auth/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Get authentication token",
        "description": "* Get authentication token from auth server",
        "operationId": "GetToken",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Token model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromKeycloakQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromKeycloakQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromKeycloakQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromKeycloakQuery"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returned authentication token",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Get authentication  from refresh token to access token",
        "description": "* Get authentication from refresh token to access token",
        "operationId": "GetRefreshToken",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromRefreshTokenQuery"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromRefreshTokenQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromRefreshTokenQuery"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTokenFromRefreshTokenQuery"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returned authentication token",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/branches": {
      "post": {
        "tags": [
          "Branches"
        ],
        "summary": "Creates branch",
        "description": "* Creates branch in specified member-code",
        "operationId": "CreateBranch",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Create Branch Request Details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Branch successfully created",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Updates branch",
        "description": "* Updates specified branch",
        "operationId": "UpdateBranch",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Update Branch Request Details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Branch successfully updated",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBranchDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branches"
        ],
        "summary": "Delete branch",
        "description": "* Deletes branch if no transaction happened. Otherwise marks as deleted(for\r\nGDPR Compliance)",
        "operationId": "DeleteBranch",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Branch code",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Branch successfully deleted",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/BoolResult"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "Branch code not found in specified member-code",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Gets branch information by code",
        "description": "* Searches for branch(es) using parameters",
        "operationId": "GetBranch",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "embed-limits",
            "in": "query",
            "description": "Specifies return value will include branch limits or\r\nnot. Default is false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "embed-address",
            "in": "query",
            "description": "Specifies return value will include branch address\r\nor not. Default is false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isInternalMessage",
            "in": "query",
            "description": "for internal use. Default is false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returned found branch",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Branch not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/branches/search": {
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Searches for branch(es)",
        "description": "* Searches for branch(es) using parameters",
        "operationId": "SearchBranches",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchName",
            "in": "query",
            "description": "Branch Name",
            "schema": {
              "type": "string",
              "example": "Ist-Pay"
            },
            "example": "Ist-Pay"
          },
          {
            "name": "parent-branch-code",
            "in": "query",
            "description": "Parent Branch Code if Exists",
            "schema": {
              "type": "string",
              "example": "1212-0001"
            },
            "example": "1212-0001"
          },
          {
            "name": "address-includes",
            "in": "query",
            "description": "Free format address line",
            "schema": {
              "type": "string",
              "example": "Alabama street"
            },
            "example": "Alabama street"
          },
          {
            "name": "country-code",
            "in": "query",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "schema": {
              "type": "string",
              "example": "US"
            },
            "example": "US"
          },
          {
            "name": "province",
            "in": "query",
            "description": "State Provience (ignore case)",
            "schema": {
              "type": "string",
              "example": "Missouri"
            },
            "example": "Missouri"
          },
          {
            "name": "province-includes",
            "in": "query",
            "description": "State Provience Includes (ignore case)",
            "schema": {
              "type": "string",
              "example": "Missouri"
            },
            "example": "Missouri"
          },
          {
            "name": "city",
            "in": "query",
            "description": "State City (ignore case)",
            "schema": {
              "type": "string",
              "example": "New York"
            },
            "example": "New York"
          },
          {
            "name": "city-includes",
            "in": "query",
            "description": "State City Includes (ignore case)",
            "schema": {
              "type": "string",
              "example": "New York"
            },
            "example": "New York"
          },
          {
            "name": "postal-code",
            "in": "query",
            "description": "Postal Code",
            "schema": {
              "type": "string",
              "example": "34223"
            },
            "example": "34223"
          },
          {
            "name": "first-row-index",
            "in": "query",
            "description": "Gets or sets the number of items to retrieve from the beginning.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "example": 0
          },
          {
            "name": "last-row-index",
            "in": "query",
            "description": "Gets or sets the number of items to retrieve from the end.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "example": 10
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returned found branch(es)",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BranchDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/branches/branch-limit": {
      "post": {
        "tags": [
          "Branches"
        ],
        "summary": "For create new branch limit",
        "operationId": "CreateBranchLimit",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchLimitCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchLimitCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchLimitCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchLimitCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The branch limit can be created.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchLimitCreatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchLimitCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branches"
        ],
        "summary": "Returns all branch limits",
        "operationId": "GetBranchLimits",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "description": "Member code. If user does not have permission to see all members, this\r\nfield is assigned automatically to user's member code.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bwp-aNs"
            },
            "example": "bwp-aNs"
          },
          {
            "name": "branch-code",
            "in": "query",
            "description": "BranchCode.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "0PB-mK9"
            },
            "example": "0PB-mK9"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Branch Limit information",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchLimitGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchLimitGetDto"
                }
              }
            }
          },
          "404": {
            "description": "Branch Limits not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Branches"
        ],
        "summary": "Updates branch limit",
        "operationId": "UpdateBranchLimit",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchLimitCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchLimitCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchLimitCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchLimitCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Branch Limit successfully updated",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitUpdatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branches"
        ],
        "summary": "Deletes member limit",
        "operationId": "DeleteBranchLimit",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchLimitCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchLimitCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchLimitCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBranchLimitCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Branch Limit successfully deleted"
          },
          "404": {
            "description": "Branch limit not found in specified branch-limit-code",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer-code}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Finds customer by code",
        "description": "* Finds customer by given code in the URL",
        "operationId": "GetCustomerByCode",
        "parameters": [
          {
            "name": "customer-code",
            "in": "path",
            "description": "Specifies customer code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful return list of member info",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "type": "https://tools.ietf.org/html/rfc7231#section-6.5.4",
                  "title": "Not Found",
                  "status": 404,
                  "traceId": "00-982607166a542147b435be3a847ddd71-fc75498eb9f09d48-00"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Updates customer",
        "description": "* Updates customer for specified customerCode",
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "name": "customer-code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Customer successfully updated",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerUpdateDto"
                }
              }
            }
          }
        }
      }
    },
    "/customers/search/full-name": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Finds customer by full name",
        "description": "* Searches the given \"includes\" the full-name inside customer full name in\r\nany place (line *full-name*)\r\n* If no record has found, it returns empty list",
        "operationId": "GetCustomerByFullName",
        "parameters": [
          {
            "name": "includes",
            "in": "query",
            "description": "the customer name searched in full name\r\nof customers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful return list of member info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerShortDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/search/last-name": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Finds customer by last name",
        "description": "* Searches the given \"includes\" parameter in full-name of the customer\r\n* Pagination also",
        "operationId": "GetCustomerByLastName",
        "parameters": [
          {
            "name": "includes",
            "in": "query",
            "description": "the customer name searched in full name\r\nof customers",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful return list of member info",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerShortDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/search/{issuer-country-code}/{id-type}/{national-id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Finds customer in country by national id",
        "description": "* Finds customer by country code and national id",
        "operationId": "GetCustomerByNationalId",
        "parameters": [
          {
            "name": "issuer-country-code",
            "in": "query",
            "description": "Specifies country code that national id search\r\nfor",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id-type",
            "in": "query",
            "description": "Id Type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IdentityDocumentType"
            }
          },
          {
            "name": "national-id",
            "in": "query",
            "description": "National Id of the customer in specified country",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuer-country-code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id-type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "national-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successful return list of member info",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates customer",
        "description": "* Creates customer verifying NationalId including type",
        "operationId": "CreateCustomer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Customer successfully created",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreatedDto"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{member-code}/{customer-code}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Deletes customer",
        "description": "* Deletes customer if there is no transaction. Otherwise mark as deleted\r\ncompliant as GDPR",
        "operationId": "DeleteCustomer",
        "parameters": [
          {
            "name": "member-code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customer-code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Customer successfully deleted",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/fee-profile-groups": {
      "get": {
        "tags": [
          "FeeProfileGroups"
        ],
        "summary": "Get existing fee profile groups",
        "operationId": "GetAllFeeProfileGroups",
        "parameters": [
          {
            "name": "embed-profiles",
            "in": "query",
            "description": "Specifies response will include profiles or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Fee Profiles successfully returned.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeeProfileGroupGetDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FeeProfileGroups"
        ],
        "summary": "Create fee profile group",
        "operationId": "CreateFeeProfileGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Create Fee Proilfe Froup",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeeProfileGroupCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeeProfileGroupCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeeProfileGroupCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeeProfileGroupCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Fee Profile Group successfully created.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeProfileGroupCreatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeProfileGroupCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FeeProfileGroups"
        ],
        "summary": "Update fee profile group",
        "operationId": "UpdateFeeProfileGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Fee Profile Group And Details To\r\nUpdate",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeeProfileGroupCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeeProfileGroupCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeeProfileGroupCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeeProfileGroupCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Fee Profile Group successfully updated.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeProfileGroupDto"
                }
              }
            }
          },
          "404": {
            "description": "Fee Profile Group code not found in specified Fee Profile fee-profile-group-code",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/fee-profile-groups/get": {
      "get": {
        "tags": [
          "FeeProfileGroups"
        ],
        "summary": "Get existing fee profile group by unique fee-profile-group-code",
        "operationId": "GetFeeProfileGroup",
        "parameters": [
          {
            "name": "fee-profile-group-code",
            "in": "query",
            "description": "Profile Group to Find",
            "required": true,
            "schema": {
              "type": "string",
              "example": "aoM-E7c"
            },
            "example": "aoM-E7c"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Fee Profile successfully returned.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/FeeProfileGroupGetDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/fee-profile-groups/{fee-profile-group-code}": {
      "delete": {
        "tags": [
          "FeeProfileGroups"
        ],
        "summary": "Delete fee profile group",
        "operationId": "DeleteFeeProfileGroup",
        "parameters": [
          {
            "name": "fee-profile-group-code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Fee Profile Group successfully deleted"
          },
          "404": {
            "description": "Fee Profile Group code not found in specified Fee Profile fee-profile-group-code",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/limits/member": {
      "get": {
        "tags": [
          "Limits"
        ],
        "summary": "Gets Member's limits and totals by currency code",
        "operationId": "GetMemberLimitsAndTotals",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency-code",
            "in": "query",
            "description": "Currency Code(If it is empty returns by all currencies.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Member's limits and totals successfully found returned by currency",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LimitsAndTotalsDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Member's limits and totals not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/limits/branch": {
      "get": {
        "tags": [
          "Limits"
        ],
        "summary": "Gets Branch's limits and totals by branch code and currency code",
        "operationId": "GetBranchLimitsAndTotals",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch-code",
            "in": "query",
            "description": "Branch Code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "121212-00092"
            },
            "example": "121212-00092"
          },
          {
            "name": "currency-code",
            "in": "query",
            "description": "Currency Code(If it is empty returns by all currencies.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Branch's limits and totals successfully found returned by currency",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LimitsAndTotalsDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Branch's limits and totals not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/member": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Creates/Updates transfer member balance",
        "description": "* Creates/Updates member balance.",
        "operationId": "ManageTransferMemberBalance",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Create/Update Balance",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ManageTransferMemberBalanceCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageTransferMemberBalanceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageTransferMemberBalanceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManageTransferMemberBalanceCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "The balance managed.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferMemberBalanceManagedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferMemberBalanceManagedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "A record not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Returns Transfer Member Balances",
        "operationId": "GetTransferMemberBalance",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "description": "Member code for sender",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bwp-aNs"
            },
            "example": "bwp-aNs"
          },
          {
            "name": "currency-code",
            "in": "query",
            "description": "Currency Code for money send",
            "schema": {
              "maxLength": 3,
              "minLength": 0,
              "type": "string",
              "example": "USD"
            },
            "example": "USD"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Get Transfer Member Balance information(s)",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransferMemberBalanceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransferMemberBalanceDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer Member Balances are not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/members": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "For create new member",
        "operationId": "CreateMember",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The member can be created.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Members"
        ],
        "summary": "Updates member",
        "operationId": "UpdateMember",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member successfully updated",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberUpdatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Delete member",
        "operationId": "DeleteMember",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member successfully deleted"
          },
          "404": {
            "description": "Member code not found in specified member-code",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Returns all members if user granted permission",
        "description": "Detailed information about the member including name, address, legal\r\ninformation",
        "operationId": "GetMembers",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "member-code",
            "in": "query",
            "description": "Member code. If user does not have permission to see all members, this field is assigned automatically to user's member code.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bwp-aNs"
            },
            "example": "bwp-aNs"
          },
          {
            "name": "embed-branches",
            "in": "query",
            "description": "Specifies response will include branches or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-branch-address",
            "in": "query",
            "description": "Specifies response will include branch address or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-branch-limits",
            "in": "query",
            "description": "Specifies response will include branches limits or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-member-address",
            "in": "query",
            "description": "Specifies response will include member address or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-member-business-info",
            "in": "query",
            "description": "Specifies response will include member business info or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-member-limits",
            "in": "query",
            "description": "Specifies response will include member limits or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-sender-fee-profile-group",
            "in": "query",
            "description": "Specifies response will include member sender fee profile or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-receiver-fee-profile-group",
            "in": "query",
            "description": "Specifies response will include member sender fee profile or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member information(s)",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              }
            }
          }
        }
      }
    },
    "/members/details": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Detailed information about the member",
        "description": "Detailed information about the member including name, address, legal\r\ninformation",
        "operationId": "GetMemberDetails",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "member-code",
            "in": "query",
            "description": "Member code. If user does not have permission to see all members, this field is assigned automatically to user's member code.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bwp-aNs"
            },
            "example": "bwp-aNs"
          },
          {
            "name": "embed-branches",
            "in": "query",
            "description": "Specifies response will include branches or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-branch-address",
            "in": "query",
            "description": "Specifies response will include branch address or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-branch-limits",
            "in": "query",
            "description": "Specifies response will include branches limits or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-member-address",
            "in": "query",
            "description": "Specifies response will include member address or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-member-business-info",
            "in": "query",
            "description": "Specifies response will include member business info or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-member-limits",
            "in": "query",
            "description": "Specifies response will include member limits or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-sender-fee-profile-group",
            "in": "query",
            "description": "Specifies response will include member sender fee profile or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "embed-receiver-fee-profile-group",
            "in": "query",
            "description": "Specifies response will include member sender fee profile or not. Default is false",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "is-internal-message",
            "in": "query",
            "description": "For future use",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returns given Member detail information",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDto"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/members/search": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Searches for member(s)",
        "description": "* Searches for member(s) using parameters",
        "operationId": "SearchMembers",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "description": "Member Code",
            "schema": {
              "type": "string",
              "example": "121212"
            },
            "example": "121212"
          },
          {
            "name": "address-includes",
            "in": "query",
            "description": "Free format address line",
            "schema": {
              "type": "string",
              "example": "Alabama street"
            },
            "example": "Alabama street"
          },
          {
            "name": "country-code",
            "in": "query",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "schema": {
              "type": "string",
              "example": "US"
            },
            "example": "US"
          },
          {
            "name": "province",
            "in": "query",
            "description": "State Provience (ignore case)",
            "schema": {
              "type": "string",
              "example": "Missouri"
            },
            "example": "Missouri"
          },
          {
            "name": "province-includes",
            "in": "query",
            "description": "State Provience Includes (ignore case)",
            "schema": {
              "type": "string",
              "example": "Missouri"
            },
            "example": "Missouri"
          },
          {
            "name": "city",
            "in": "query",
            "description": "State City (ignore case)",
            "schema": {
              "type": "string",
              "example": "New York"
            },
            "example": "New York"
          },
          {
            "name": "city-includes",
            "in": "query",
            "description": "State City Includes (ignore case)",
            "schema": {
              "type": "string",
              "example": "New York"
            },
            "example": "New York"
          },
          {
            "name": "postal-code",
            "in": "query",
            "description": "Postal Code",
            "schema": {
              "type": "string",
              "example": "34223"
            },
            "example": "34223"
          },
          {
            "name": "business-name",
            "in": "query",
            "description": "Business Name (ignore case)",
            "schema": {
              "type": "string",
              "example": "IstPay Odeme A.S."
            },
            "example": "IstPay Odeme A.S."
          },
          {
            "name": "business-name-includes",
            "in": "query",
            "description": "Business Name Includes (ignore case)",
            "schema": {
              "type": "string",
              "example": "IstPay Odeme"
            },
            "example": "IstPay Odeme"
          },
          {
            "name": "send-allowed",
            "in": "query",
            "description": "Indicates whether the member is allowed to send.",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "receive-allowed",
            "in": "query",
            "description": "Indicates whether the member is allowed to receive.",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "example": true
          },
          {
            "name": "description-includes",
            "in": "query",
            "description": "Description Includes (ignore case)",
            "schema": {
              "type": "string",
              "example": "Financial services"
            },
            "example": "Financial services"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the member's business.",
            "schema": {
              "type": "string",
              "example": "info@istpay.com"
            },
            "example": "info@istpay.com"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Phone number of the member's business.",
            "schema": {
              "type": "string",
              "example": "+1-202-555-0172"
            },
            "example": "+1-202-555-0172"
          },
          {
            "name": "registration-issued-by-country-code",
            "in": "query",
            "description": "Country Code (ISO 3166-1 2 digit) of the organization that issued the\r\nregistration.",
            "schema": {
              "type": "string",
              "example": "US"
            },
            "example": "US"
          },
          {
            "name": "registration-number",
            "in": "query",
            "description": "The country of the member's licence number.",
            "schema": {
              "type": "string",
              "example": "123-456-789-0"
            },
            "example": "123-456-789-0"
          },
          {
            "name": "first-row-index",
            "in": "query",
            "description": "Gets or sets the number of items to retrieve from the beginning.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "example": 0
          },
          {
            "name": "last-row-index",
            "in": "query",
            "description": "Gets or sets the number of items to retrieve from the end.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "example": 10
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Returned found member(s)",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemberDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/member-limit": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "For create new member limit",
        "operationId": "CreateMemberLimit",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberLimitCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberLimitCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberLimitCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberLimitCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The member limit can be created.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitCreatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Members"
        ],
        "summary": "Updates member limit",
        "operationId": "UpdateMemberLimit",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberLimitCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberLimitCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberLimitCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberLimitCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member Limit successfully updated",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitUpdatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Delete member limit",
        "operationId": "DeleteMemberLimit",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberLimitCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberLimitCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberLimitCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberLimitCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member Limit successfully deleted"
          },
          "404": {
            "description": "Member limit not found in specified member-limit-code",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/members/member-limit/get-all-member-limits": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Returns all memberlimits",
        "operationId": "GetMemberLimits",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "description": "Member code. If user does not have permission to see all members, this\r\nfield is assigned automatically to user's member code.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bwp-aNs"
            },
            "example": "bwp-aNs"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member Limit information(s)",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitGetDto"
                }
              }
            }
          },
          "404": {
            "description": "Member Limits not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/members/member-limit/get-member-limit": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Returns member limit",
        "operationId": "GetMemberLimit",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "description": "Member code. If user does not have permission to see all members, this\r\nfield is assigned automatically to user's member code.",
            "schema": {
              "type": "string",
              "example": "cfn-ZaE"
            },
            "example": "cfn-ZaE"
          },
          {
            "name": "limitType",
            "in": "query",
            "description": "Limit Type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LimitType"
            }
          },
          {
            "name": "currencyCode",
            "in": "query",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member Limit information(s)",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitGetDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberLimitGetDto"
                }
              }
            }
          },
          "404": {
            "description": "Member Limit not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/members/member-channel-type": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "For create new member channel type",
        "operationId": "CreateMemberChannelType",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberChannelTypeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberChannelTypeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberChannelTypeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberChannelTypeCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "The member channel type can be created.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberChannelTypeCreatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberChannelTypeCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "summary": "Updates member channel type",
        "operationId": "DeleteMemberChannelType",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberChannelTypeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberChannelTypeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberChannelTypeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberChannelTypeCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Member channel type successfully deleted",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberChannelTypeUpdatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/members/countries": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "Countries",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Get Countries",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/members/channels": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "GetChannelCurrency",
        "parameters": [
          {
            "name": "country-code",
            "in": "query",
            "description": "Country Code",
            "schema": {
              "type": "string",
              "example": "TR,US,GB"
            },
            "example": "TR,US,GB"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Get Channel Currency",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelCurrencyDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/members/available-members": {
      "get": {
        "tags": [
          "Members"
        ],
        "operationId": "GetTransferMemberList",
        "parameters": [
          {
            "name": "country-code",
            "in": "query",
            "description": "Country Code",
            "schema": {
              "type": "string",
              "example": "TR,US"
            },
            "example": "TR,US"
          },
          {
            "name": "transfer-channel-type",
            "in": "query",
            "description": "Transfer Type",
            "schema": {
              "$ref": "#/components/schemas/TransferChannelType"
            },
            "example": "Transfer2Wallet,Transfer2Name,Transfer2Iban"
          },
          {
            "name": "receive-currency-code",
            "in": "query",
            "description": "Currency",
            "schema": {
              "type": "string",
              "example": "TRY,USD,EUR"
            },
            "example": "TRY,USD,EUR"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Get Transfer Member List",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferMemberListDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/payments/transfer-info-by-transfer-reference-code": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Gets transfer infos by transfer reference code for payment that is\r\navailable",
        "description": "* You can use this endpoint for checking transfer infos before paying\r\nprocesses.",
        "operationId": "TransferInfoByTransferReferenceCode",
        "parameters": [
          {
            "name": "transfer-reference-code",
            "in": "query",
            "description": "Unique code of the transaction",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7BpS-UnjY-Poov"
            },
            "example": "7BpS-UnjY-Poov"
          },
          {
            "name": "pin",
            "in": "query",
            "description": "Pin generated by IstPay for 2 factor authentication.",
            "schema": {
              "type": "string",
              "example": "952318"
            },
            "example": "952318"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Got transfer infos",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/IPaymentTransferInfoDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer infos not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/payments/transfer-info-by-transfer-member-reference-code": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Gets transfer infos by member reference code for payment that is available",
        "description": "* You can use this endpoint for checking transfer infos before paying\r\nprocesses.",
        "operationId": "TransferInfoByTransferMemberReferenceCode",
        "parameters": [
          {
            "name": "transfer-member-reference-code",
            "in": "query",
            "description": "Unique code of the transaction",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7BpS-UnjY-Poov"
            },
            "example": "7BpS-UnjY-Poov"
          },
          {
            "name": "pin",
            "in": "query",
            "description": "Pin generated by IstPay for 2 factor authentication.",
            "schema": {
              "type": "string",
              "example": "952318"
            },
            "example": "952318"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Got transfer infos",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/IPaymentTransferInfoDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer infos not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/payments/in-progress": {
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "Marks payment in progress for specified amount of time.",
        "description": "* This prevents multiple payment from different locations.\r\n* Suggested use is, call this API when customer at the counter of the\r\nmember's agency.\r\n* This will prevent processing of the payment from another agency.\r\n* It can be manually canceled, automatically after configured duration or\r\npayment done has called",
        "operationId": "PaymentInProgress",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Payment In progress Request Details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Mark transaction processing in progress",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/payments/cancel-in-progress": {
      "delete": {
        "tags": [
          "Payments"
        ],
        "summary": "Cancels a payment operation marked as in-progress",
        "description": "* In happy patch scenario, calling this API is not required. When payment\r\nmarked as done, it's automatically\r\nreleased\r\n* If somehow payment is not possible, this API can be called.\r\n* Even if it's not called, payment in-progress status will be canceled\r\nautomatically after 30 minutes.",
        "operationId": "PaymentInProgressCancel",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Payment In progress cancel Request\r\nDetails",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCancelCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCancelCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCancelCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInProgressCancelCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "The transfer has been canceled",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCanceledDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/payments/done": {
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "Marks payment is done",
        "description": "Marks payment is done which means payment receiver by the customer.",
        "operationId": "PaymentDone",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Payment done Request Details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDoneCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDoneCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDoneCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDoneCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "The transfer has been done",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCanceledDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/payments/reverse-done": {
      "delete": {
        "tags": [
          "Payments"
        ],
        "summary": "Cancel a transaction which is done",
        "description": "* If something goes wrong during the payment done operation, this api\r\nshould be called by the receiver member.\r\n* If this api also fails, receiver member is responsible for calling same\r\napi at least 3 times each 30 minutes",
        "operationId": "PaymentCancelDone",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Payment reverse Request Details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReverseCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReverseCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReverseCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReverseCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "The transfer has been reversed",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCanceledDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "delete": {
        "tags": [
          "Payments"
        ],
        "summary": "Cancel a successfull transfer before payment.",
        "description": "* Only creator branch or member main branch of the transfer order can\r\ncancel.\r\n* Cancellation will be done only if the money transfer order is pending on\r\nthe IstPay.\r\n* If the cancel requested in the same day, it doesnt effect settlement.\r\n* If the cancel requested after settlement generated at the end of the day,\r\nit will create negative transfer order.",
        "operationId": "CancelTransfer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Transfer cancel request details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Transfer successfully canceled",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCanceledDto"
                }
              }
            }
          },
          "406": {
            "description": "Transfer cannot be canceled in this status",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCanceledDto"
                }
              }
            }
          }
        }
      }
    },
    "/query/get-iban-transfer-last-status": {
      "get": {
        "tags": [
          "Query"
        ],
        "summary": "Gets IBAN transfers last status if it was in progress.",
        "description": "",
        "operationId": "GetIbanTransferLastStatus",
        "parameters": [
          {
            "name": "transfer-reference-code",
            "in": "query",
            "description": "Unique code of the transaction",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7BpS-UnjY-Poov"
            },
            "example": "7BpS-UnjY-Poov"
          },
          {
            "name": "pin",
            "in": "query",
            "description": "Pin generated by IstPay for 2 factor authentication.",
            "schema": {
              "type": "string",
              "example": "952318"
            },
            "example": "952318"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Got IBAN transfers last status",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBankTransferDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer infos not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/transfers": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Creates new transfer request",
        "description": "* Creates a transfer.\r\n* You can check parameters with validate request without creating transfer.\r\n* You can calculate fee with calculate fee request.",
        "operationId": "CreateTransfer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Create Transfer Request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "201": {
            "description": "The transfer can be created.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCreatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "A record not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/validate": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Validates if a transfer can be made",
        "description": "* Validates a transfer can be made, without actually performing the\r\ntransfer.\r\n* This endpoint checks if the passed parameters can be accepted, then same\r\nrequest usable for creating transfer request",
        "operationId": "ValidateTransfer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Validate Transfer Request(Same With\r\nCreate Transfer Request)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTransferCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTransferCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTransferCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTransferCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "202": {
            "description": "The transfer request validated.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferValidatedDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferValidatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Problem details",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "A record not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/calculate-fee": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Calculates and returns transfer fee",
        "operationId": "CalculateTransferFee",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "requestBody": {
          "description": "Calculate Fee Request(Same With Create\r\nTransfer Request)",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateFeeCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateFeeCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateFeeCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateFeeCommand"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "The transfer fee information.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferFeeResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferFeeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Transfer fee cannot be calculated",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "A record not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/get": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Gets transfer's information by transfer reference code",
        "operationId": "GetTransfer",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transfer-reference-code",
            "in": "query",
            "description": "Unique code of the transaction",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7BpS-UnjY-Poov"
            },
            "example": "7BpS-UnjY-Poov"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Transfer successfully found and returned",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/pin": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Gets transfer's pin by transfer reference code",
        "operationId": "GetTransferPin",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transfer-reference-code",
            "in": "query",
            "description": "Unique code of the transaction",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7BpS-UnjY-Poov"
            },
            "example": "7BpS-UnjY-Poov"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Transfer Pin successfully returned",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferPinDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/get-by-member-transfer-reference-code": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Gets existing transfer by member transfer reference code",
        "operationId": "GetTransferByMemberTransferReference",
        "parameters": [
          {
            "name": "member-code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member-transfer-reference-code",
            "in": "query",
            "description": "Unique Id generated by member to identify the requested transaction. Member\r\nshould generate this code. This code can be used to query transaction.",
            "schema": {
              "type": "string",
              "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
            },
            "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Transfer Pin successfully returned",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferDto"
                }
              }
            }
          },
          "404": {
            "description": "Transfer not found",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/search": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Searches transfer with various fields",
        "operationId": "SearchTransfer",
        "parameters": [
          {
            "name": "date-from",
            "in": "query",
            "description": "The start date time for the transfer search.",
            "schema": {
              "type": "string",
              "example": "2023-01-01 14:30:00"
            },
            "example": "2023-01-01 14:30:00"
          },
          {
            "name": "date-to",
            "in": "query",
            "description": "The end date time for the transfer search.",
            "schema": {
              "type": "string",
              "example": "2023-12-31 23:59:59"
            },
            "example": "2023-12-31 23:59:59"
          },
          {
            "name": "sender-member-code",
            "in": "query",
            "description": "The sender's member code",
            "schema": {
              "type": "string",
              "example": "123-456"
            },
            "example": "123-456"
          },
          {
            "name": "receiver-member-code",
            "in": "query",
            "description": "The receiver's member code",
            "schema": {
              "type": "string",
              "example": "123-456"
            },
            "example": "123-456"
          },
          {
            "name": "transfer-reference-code",
            "in": "query",
            "description": "The transfer's reference code",
            "schema": {
              "type": "string",
              "example": "123-456"
            },
            "example": "123-456"
          },
          {
            "name": "sender-branch-code",
            "in": "query",
            "description": "The sender's branch code for the transfer search.",
            "schema": {
              "type": "string",
              "example": "123-456"
            },
            "example": "123-456"
          },
          {
            "name": "sender-currency",
            "in": "query",
            "description": "The sender currency for the transfer search.",
            "schema": {
              "type": "string",
              "example": "USD"
            },
            "example": "USD"
          },
          {
            "name": "receiver-currency",
            "in": "query",
            "description": "The reciever currency for the transfer search.",
            "schema": {
              "type": "string",
              "example": "USD"
            },
            "example": "USD"
          },
          {
            "name": "amount-from",
            "in": "query",
            "description": "The minimum amount for the transfer search.",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 100
            },
            "example": 100
          },
          {
            "name": "amount-to",
            "in": "query",
            "description": "The maximum amount for the transfer search.",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 500
            },
            "example": 500
          },
          {
            "name": "first-row-index",
            "in": "query",
            "description": "The number of items to retrieve from the beginning.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "example": 0
          },
          {
            "name": "last-row-index",
            "in": "query",
            "description": "The number of items to retrieve from the end.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 10
            },
            "example": 10
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Found transfers.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSearchResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/validate-wallet": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Validate wallet info",
        "description": "",
        "operationId": "ValidateWallet",
        "parameters": [
          {
            "name": "receiverWalletId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legalFullName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": {
              "type": "string",
              "default": "1.0"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailsDto"
                }
              }
            }
          },
          "200": {
            "description": "Validate transfer successfully called.",
            "content": {
              "application/vnd.restful+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTransfer2WalletResponseDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BalanceOperationType": {
        "enum": [
          "Increase",
          "Decrease"
        ],
        "type": "string"
      },
      "BoolResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BranchCreatedDto": {
        "required": [
          "branchAddress",
          "branchCode"
        ],
        "type": "object",
        "properties": {
          "parentBranchCode": {
            "type": "string",
            "description": "Parent Branch Code if Exists",
            "nullable": true,
            "example": "121212-00001"
          },
          "branchAddress": {
            "$ref": "#/components/schemas/PostalAddressDto"
          },
          "coordinate": {
            "$ref": "#/components/schemas/LatLongDto"
          },
          "branchName": {
            "type": "string",
            "description": "Branch Name (max 32 char)",
            "nullable": true,
            "example": "Ist-Pay"
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch Code",
            "example": "121212-00092"
          }
        },
        "additionalProperties": false,
        "description": "Model for Created Branch"
      },
      "BranchDto": {
        "required": [
          "branchAddress",
          "branchCode",
          "branchLimits"
        ],
        "type": "object",
        "properties": {
          "parentBranchCode": {
            "type": "string",
            "description": "Parent Branch Code if Exists",
            "nullable": true,
            "example": "121212-00001"
          },
          "branchAddress": {
            "$ref": "#/components/schemas/PostalAddressDto"
          },
          "coordinate": {
            "$ref": "#/components/schemas/LatLongDto"
          },
          "branchName": {
            "type": "string",
            "description": "Branch Name (max 32 char)",
            "nullable": true,
            "example": "Ist-Pay"
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch Code",
            "example": "121212-00092"
          },
          "createdAt": {
            "type": "string",
            "description": "Branch Creation Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "updatedAt": {
            "type": "string",
            "description": "Branch Last Update Date",
            "format": "date-time",
            "nullable": true,
            "example": "2022-07-28 14:08:55"
          },
          "branchLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchLimitDto"
            },
            "description": "Array of branches in the member"
          }
        },
        "additionalProperties": false,
        "description": "Model For Branch in the Member"
      },
      "BranchLimitCreatedDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BranchLimitDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          }
        },
        "additionalProperties": false,
        "description": "Model For Branch Limit"
      },
      "BranchLimitGetDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          }
        },
        "additionalProperties": false
      },
      "BusinessRegistrationType": {
        "enum": [
          "ToNameTransfer",
          "ToWalletTransfer",
          "ToIbanTransfer"
        ],
        "type": "string"
      },
      "CalculateFeeCommand": {
        "required": [
          "channelType",
          "createCurrencyRateToken",
          "receiveCurrencyCode",
          "receiveInCountryCode",
          "receiverMemberCode",
          "sendAmount",
          "sendCurrencyCode",
          "senderMemberCode"
        ],
        "type": "object",
        "properties": {
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money receive",
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "senderMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "receiverMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for receiver",
            "example": "010203"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "createCurrencyRateToken": {
            "type": "boolean",
            "description": "Create Currency Rate Token for reserving currency rate for a period of time",
            "example": true
          },
          "currencyRateToken": {
            "type": "string",
            "description": "Currency Rate Token for the conversion\r\nThe token is stored for a few minutes\r\nIf you fill this area you will get the currency rate token. So you can use\r\ncurrency rate for a few minutes.",
            "nullable": true,
            "example": " 4a7b5c60-4e4b-4de1-8f2c-5a36f2c89a6a"
          }
        },
        "additionalProperties": false
      },
      "CancelTransferCommand": {
        "required": [
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          }
        },
        "additionalProperties": false
      },
      "ChannelCurrencyDto": {
        "type": "object",
        "properties": {
          "channelType": {
            "type": "string",
            "description": "Channel Type",
            "nullable": true,
            "example": "Transfer2Wallet,  Transfer2Name, Transfer2Iban"
          },
          "currencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Currencies",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBranchCommand": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string",
            "description": "Branch Name (max 32 char)",
            "nullable": true,
            "example": "Ist-Pay"
          },
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "description": "Branch Code of the Branch",
            "nullable": true,
            "example": "121212"
          },
          "parentBranchCode": {
            "type": "string",
            "description": "Parent Branch Code if Exists",
            "nullable": true,
            "example": "121212-00001"
          },
          "line1": {
            "type": "string",
            "description": "Free format address line 1 (max 256 char)",
            "nullable": true,
            "example": "Alabama street"
          },
          "line2": {
            "type": "string",
            "description": "Free format address line 2 (max 256 char)",
            "nullable": true,
            "example": "No 3 apartment 44"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "US"
          },
          "province": {
            "type": "string",
            "description": "State Provience",
            "nullable": true,
            "example": "Missouri"
          },
          "city": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "St Louis"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "nullable": true,
            "example": "34223"
          },
          "latitude": {
            "type": "string",
            "description": "Latitude (2-11 char)",
            "nullable": true,
            "example": "55.875166"
          },
          "longitude": {
            "type": "string",
            "description": "Longitude (2-11 char)",
            "nullable": true,
            "example": "-5.974943"
          }
        },
        "additionalProperties": false
      },
      "CreateBranchLimitCommand": {
        "required": [
          "branchCode",
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "description": "Member Code.",
            "nullable": true,
            "example": "3tR5-ZKGT"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": "100000"
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "BranchId"
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerDto": {
        "required": [
          "birthDate",
          "customerAddresses",
          "gender",
          "identityInfos",
          "memberCode",
          "name",
          "nationalityCountryCode",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameDto"
          },
          "nationalityCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Nationality of the customer",
            "example": "US"
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1980-01-25"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver phone number in E164 format",
            "example": "+16175551212"
          },
          "customerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAddressDto"
            },
            "description": "Receiver phone number in E164 format"
          },
          "identityInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDto"
            }
          },
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Member Code",
            "example": "18FD-AAFT-JMD1"
          }
        },
        "additionalProperties": false,
        "description": "Model for Customer Create Request"
      },
      "CreateFeeProfileGroupCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Group1"
          },
          "feeProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeProfileCreatedDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMemberChannelTypeCommand": {
        "required": [
          "channelType",
          "isDefaultLocalCurrency",
          "memberCode",
          "receiveCurrency"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member Code.",
            "example": "3tR5-ZKGT"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "receiveCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "Receive Currency",
            "example": "TRY, USD,EUR"
          },
          "isDefaultLocalCurrency": {
            "type": "boolean",
            "description": "Is Default Local currency",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "CreateMemberCommand": {
        "required": [
          "memberCode",
          "receiverFeeProfileGroupCode",
          "senderFeeProfileGroupCode"
        ],
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "Legal business name of the member",
            "nullable": true,
            "example": "IstPay Odeme Hizmetleri A.S."
          },
          "sendAllowed": {
            "type": "boolean",
            "description": "Speecifies money send is allowed or not",
            "example": true
          },
          "receiveAllowed": {
            "type": "boolean",
            "description": "Speecifies money receive is allowed or not",
            "example": true
          },
          "memberAddress": {
            "$ref": "#/components/schemas/MemberAddressDto"
          },
          "memberBusinessInfo": {
            "$ref": "#/components/schemas/MemberBusinessInfoDto"
          },
          "senderFeeProfileGroupCode": {
            "minLength": 1,
            "type": "string",
            "description": "Sender Profile Group Code",
            "example": "tZH-c9f"
          },
          "receiverFeeProfileGroupCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Profile Group Code",
            "example": "6gE-XPR"
          },
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member Code.",
            "example": "3tR5-ZKGT"
          }
        },
        "additionalProperties": false
      },
      "CreateMemberLimitCommand": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "description": "Member Code.",
            "nullable": true,
            "example": "3tR5-ZKGT"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": "100000"
          },
          "isMultiAdd": {
            "type": "boolean",
            "description": "Toplu Limit Eklememi (Currency bazında)",
            "example": "100000"
          }
        },
        "additionalProperties": false
      },
      "CreateTransferCommand": {
        "required": [
          "channelType",
          "memberTransferReferenceCode",
          "receiveAmount",
          "receiveCurrencyCode",
          "receiveInCountryCode",
          "receiverCustomer",
          "receiverMemberCode",
          "sendAmount",
          "sendCurrencyCode",
          "senderBranchCode",
          "senderCustomer",
          "senderMemberCode"
        ],
        "type": "object",
        "properties": {
          "memberTransferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Id generated by member to identify the requested transaction. Member should generate this code. This code can be used to query transaction.",
            "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
          },
          "description": {
            "type": "string",
            "description": "Optional description for money transfer",
            "nullable": true,
            "example": "Payment for the dog clothes"
          },
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money receive",
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "receiveAmount": {
            "type": "number",
            "description": "Amount to receive",
            "format": "double",
            "example": 9559.25
          },
          "senderMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "senderBranchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch code for sender",
            "example": "bwp-aNs"
          },
          "receiverMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for receiver",
            "example": "010203"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "transferReasonType": {
            "$ref": "#/components/schemas/TransferReasonType"
          },
          "generatePin": {
            "type": "boolean",
            "description": "2 factor authentication preference",
            "nullable": true,
            "example": true
          },
          "senderCustomer": {
            "$ref": "#/components/schemas/SenderCustomerDto"
          },
          "receiverCustomer": {
            "$ref": "#/components/schemas/ReceiverCustomerDto"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "currencyRateToken": {
            "type": "string",
            "description": "Currency Rate Token for the conversion\r\nThe token is stored for a few minutes",
            "nullable": true,
            "example": " 4a7b5c60-4e4b-4de1-8f2c-5a36f2c89a6a"
          }
        },
        "additionalProperties": false
      },
      "CustomerAddressDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "description": "Free format address line 1",
            "nullable": true,
            "example": "Alabama street"
          },
          "line2": {
            "type": "string",
            "description": "Free format address line 2",
            "nullable": true,
            "example": "No 3 apartment 44"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "US"
          },
          "province": {
            "type": "string",
            "description": "State Provience",
            "nullable": true,
            "example": "Missouri"
          },
          "city": {
            "type": "string",
            "description": "State City",
            "nullable": true,
            "example": "New York"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "nullable": true,
            "example": "34223"
          },
          "addressType": {
            "$ref": "#/components/schemas/CustomerAddressType"
          }
        },
        "additionalProperties": false
      },
      "CustomerAddressType": {
        "enum": [
          "Home",
          "Work",
          "Other"
        ],
        "type": "string"
      },
      "CustomerCreatedDto": {
        "required": [
          "birthDate",
          "customerAddresses",
          "customerCode",
          "gender",
          "identityInfos",
          "memberCode",
          "name",
          "nationalityCountryCode",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameDto"
          },
          "nationalityCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Nationality of the customer",
            "example": "US"
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1980-01-25"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver phone number in E164 format",
            "example": "+16175551212"
          },
          "customerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAddressDto"
            },
            "description": "Receiver phone number in E164 format"
          },
          "identityInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDto"
            }
          },
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Member Code",
            "example": "18FD-AAFT-JMD1"
          },
          "customerCode": {
            "minLength": 1,
            "type": "string",
            "description": "Customer code",
            "example": "ddbafa20-8095-4221-97ae-53e1a224f02e"
          }
        },
        "additionalProperties": false
      },
      "CustomerDto": {
        "required": [
          "birthDate",
          "customerAddresses",
          "customerCode",
          "gender",
          "identityInfos",
          "memberCode",
          "name",
          "nationalityCountryCode",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameDto"
          },
          "nationalityCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Nationality of the customer",
            "example": "US"
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1980-01-25"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver phone number in E164 format",
            "example": "+16175551212"
          },
          "customerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAddressDto"
            },
            "description": "Receiver phone number in E164 format"
          },
          "identityInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDto"
            }
          },
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Member Code",
            "example": "18FD-AAFT-JMD1"
          },
          "customerCode": {
            "minLength": 1,
            "type": "string",
            "description": "Customer code",
            "example": "ddbafa20-8095-4221-97ae-53e1a224f02e"
          }
        },
        "additionalProperties": false,
        "description": "Model for Customer information"
      },
      "CustomerShortDto": {
        "required": [
          "code",
          "identityType",
          "idNumber",
          "issuerCountry",
          "legalFullName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Customer code",
            "example": "ddbafa20-8095-4221-97ae-53e1a224f02e"
          },
          "legalFullName": {
            "minLength": 1,
            "type": "string",
            "description": "Full legal name",
            "example": "Nikola Michael Tesla Jr."
          },
          "identityType": {
            "$ref": "#/components/schemas/IdentityDocumentType"
          },
          "issuerCountry": {
            "minLength": 1,
            "type": "string",
            "description": "National Id Issuer Country Code",
            "example": "US"
          },
          "idNumber": {
            "minLength": 1,
            "type": "string",
            "description": "National Id number written on id document",
            "example": "US"
          }
        },
        "additionalProperties": false,
        "description": "Model for Customer limited fields for fast lookup including code, country code, national id, and full name"
      },
      "CustomerUpdateDto": {
        "required": [
          "birthDate",
          "customerAddresses",
          "gender",
          "identityInfos",
          "name",
          "nationalityCountryCode",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameDto"
          },
          "nationalityCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Nationality of the customer",
            "example": "US"
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1980-01-25"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver phone number in E164 format",
            "example": "+16175551212"
          },
          "customerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAddressDto"
            },
            "description": "Receiver phone number in E164 format"
          },
          "identityInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityInfoDto"
            }
          }
        },
        "additionalProperties": false
      },
      "DeleteBranchCommand": {
        "type": "object",
        "properties": {
          "branchCode": {
            "type": "string",
            "description": "Branch Code of the Branch",
            "nullable": true,
            "example": "121212"
          },
          "memberCode": {
            "type": "string",
            "description": "Member Code.",
            "nullable": true,
            "example": "3tR5-ZKGT"
          }
        },
        "additionalProperties": false
      },
      "DeleteBranchLimitCommand": {
        "required": [
          "branchCode",
          "currencyCode",
          "limitType",
          "memberCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member Code.",
            "example": "3tR5-ZKGT"
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch Code",
            "example": "oF5-clE"
          },
          "limitType": {
            "minLength": 1,
            "type": "string",
            "description": "Limit Type"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          }
        },
        "additionalProperties": false
      },
      "DeleteMemberChannelTypeCommand": {
        "required": [
          "memberCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member Code.",
            "example": "3tR5-ZKGT"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "receiveCurrency": {
            "type": "string",
            "description": "Receive Currency",
            "nullable": true,
            "example": "TRY, USD, EUR"
          },
          "isDefaultLocalCurrency": {
            "type": "boolean",
            "description": "Is Default Local currency",
            "example": true
          }
        },
        "additionalProperties": false
      },
      "DeleteMemberLimitCommand": {
        "required": [
          "currencyCode",
          "limitType"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "description": "Member Code.",
            "nullable": true,
            "example": "3tR5-ZKGT"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          }
        },
        "additionalProperties": false
      },
      "FeeChannelType": {
        "enum": [
          "Wallet",
          "Name",
          "Iban",
          "Default"
        ],
        "type": "string"
      },
      "FeeProfileCreatedDto": {
        "type": "object",
        "properties": {
          "destinationCountry": {
            "type": "string",
            "description": "Destination Country",
            "nullable": true,
            "example": "USA"
          },
          "channelType": {
            "$ref": "#/components/schemas/FeeChannelType"
          },
          "rangeMin": {
            "type": "integer",
            "description": "Min Amount",
            "format": "int32",
            "example": 0
          },
          "rangeMax": {
            "type": "integer",
            "description": "Max Amount",
            "format": "int32",
            "example": 1000
          },
          "fixedCommissionValue": {
            "type": "number",
            "description": "Fixed Commission Amount",
            "format": "double",
            "example": 3.45
          },
          "fixedCommissionCurrency": {
            "type": "string",
            "description": "Fixed Commission Currency",
            "nullable": true,
            "example": "USD"
          },
          "commissionPercent": {
            "type": "number",
            "description": "Commission Percent",
            "format": "double",
            "example": 0.02
          },
          "transferCurrency": {
            "type": "string",
            "description": "Transfer currency should match to transfer while calculating fee",
            "nullable": true,
            "example": "USD"
          }
        },
        "additionalProperties": false
      },
      "FeeProfileDto": {
        "type": "object",
        "properties": {
          "destinationCountry": {
            "type": "string",
            "description": "Destination Country",
            "nullable": true,
            "example": "TR"
          },
          "channelType": {
            "$ref": "#/components/schemas/FeeChannelType"
          },
          "rangeMin": {
            "type": "integer",
            "description": "Min Amount",
            "format": "int32",
            "example": 0
          },
          "rangeMax": {
            "type": "integer",
            "description": "Max Amount",
            "format": "int32",
            "example": 1000
          },
          "fixedCommissionValue": {
            "type": "number",
            "description": "Fixed Commision Amount",
            "format": "double",
            "example": 3.45
          },
          "fixedCommissionCurrency": {
            "type": "string",
            "description": "Fixed Commision Currency",
            "nullable": true,
            "example": "USD"
          },
          "commissionPercent": {
            "type": "number",
            "description": "Commision Percent",
            "format": "double",
            "example": 0.02
          },
          "transferCurrency": {
            "type": "string",
            "description": "Transfer currecny should match to transfer while calculating fee",
            "nullable": true,
            "example": "USD"
          },
          "createdAt": {
            "type": "string",
            "description": "Create Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "updatedAt": {
            "type": "string",
            "description": "Update Date",
            "format": "date-time",
            "nullable": true,
            "example": "2001-05-24 14:03:28"
          }
        },
        "additionalProperties": false
      },
      "FeeProfileGroupCreatedDto": {
        "type": "object",
        "properties": {
          "feeProfileGroupCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "feeProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeProfileDto"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FeeProfileGroupDto": {
        "type": "object",
        "properties": {
          "feeProfileGroupCode": {
            "type": "string",
            "description": "Fee Profile Group Code",
            "nullable": true,
            "example": "DuA-373"
          },
          "name": {
            "type": "string",
            "description": "Name of the profile group",
            "nullable": true,
            "example": "Group1"
          },
          "feeProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeProfileDto"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Create Date",
            "format": "date-time",
            "example": "2022-07-28 14:08:55"
          },
          "updatedAt": {
            "type": "string",
            "description": "Update Date",
            "format": "date-time",
            "nullable": true,
            "example": "2022-07-28 14:08:55"
          }
        },
        "additionalProperties": false
      },
      "FeeProfileGroupGetDto": {
        "type": "object",
        "properties": {
          "feeProfileGroupCode": {
            "type": "string",
            "description": "Code of the fee profile group",
            "nullable": true,
            "example": "I1s-ZK6"
          },
          "name": {
            "type": "string",
            "description": "Name of the fee profile group",
            "nullable": true,
            "example": "Group1"
          },
          "feeProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeProfileDto"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Create Date",
            "format": "date-time",
            "example": "2022-07-28 14:08:55"
          },
          "updatedAt": {
            "type": "string",
            "description": "Update Date",
            "format": "date-time",
            "nullable": true,
            "example": "2022-07-28 14:08:55"
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          "Male",
          "Female",
          "PreferNotToSay",
          "Other"
        ],
        "type": "string",
        "description": "Gender Type"
      },
      "GetTokenFromKeycloakQuery": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTokenFromRefreshTokenQuery": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetTransferMemberBalanceDto": {
        "required": [
          "currencyCode",
          "currentBalance"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "currentBalance": {
            "type": "number",
            "description": "Balance Value for member",
            "format": "double",
            "example": 1000
          }
        },
        "additionalProperties": false
      },
      "IPaymentTransferInfoDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "senderCountryCode": {
            "type": "string",
            "nullable": true
          },
          "receiveInCountryCode": {
            "type": "string",
            "nullable": true
          },
          "transferReferenceCode": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "feeCurrency": {
            "type": "string",
            "nullable": true
          },
          "transferDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "IdentityDocumentType": {
        "enum": [
          "Passport",
          "DriverLicense",
          "NationalId"
        ],
        "type": "string",
        "description": "ID Document Type"
      },
      "IdentityInfoDto": {
        "required": [
          "expireDate",
          "identityType",
          "idNumber",
          "issuerCountryCode",
          "issuingDate"
        ],
        "type": "object",
        "properties": {
          "identityType": {
            "$ref": "#/components/schemas/IdentityDocumentType"
          },
          "issuerCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Issuer Country Code (ISO 3166 1 alpha 2)",
            "example": "US"
          },
          "idNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Id number written on id document",
            "example": "US"
          },
          "issuingDate": {
            "minLength": 1,
            "type": "string",
            "description": "Issuing date of the Id",
            "example": "2022-01-28"
          },
          "expireDate": {
            "minLength": 1,
            "type": "string",
            "description": "Expire date of the Id (must be future date)",
            "example": "2032-05-25"
          }
        },
        "additionalProperties": false,
        "description": "Model for Id Document"
      },
      "LatLongDto": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "Latitude",
            "nullable": true,
            "example": "55.875166"
          },
          "longitude": {
            "type": "string",
            "description": "Longitude",
            "nullable": true,
            "example": "-5.974943"
          }
        },
        "additionalProperties": false,
        "description": "Model for Geographic location with Latitude and Longitude"
      },
      "LimitType": {
        "enum": [
          "PerTransfer",
          "Daily",
          "Monthly",
          "Yearly",
          "MinBalance"
        ],
        "type": "string"
      },
      "LimitTypeLimitAndTotalSet": {
        "type": "object",
        "properties": {
          "totalLimit": {
            "type": "number",
            "description": "Total Limit of Limit",
            "format": "double",
            "example": 1000
          },
          "totalAmount": {
            "type": "number",
            "description": "Total Amount of Limit",
            "format": "double",
            "example": 1000
          }
        },
        "additionalProperties": false
      },
      "LimitsAndTotalsDto": {
        "required": [
          "currencyCode",
          "daily",
          "monthly",
          "perTransfer",
          "yearly"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          },
          "perTransfer": {
            "$ref": "#/components/schemas/LimitTypeLimitAndTotalSet"
          },
          "daily": {
            "$ref": "#/components/schemas/LimitTypeLimitAndTotalSet"
          },
          "monthly": {
            "$ref": "#/components/schemas/LimitTypeLimitAndTotalSet"
          },
          "yearly": {
            "$ref": "#/components/schemas/LimitTypeLimitAndTotalSet"
          }
        },
        "additionalProperties": false
      },
      "ManageTransferMemberBalanceCommand": {
        "required": [
          "amount",
          "currencyCode",
          "memberCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "amount": {
            "type": "number",
            "description": "Balance Value for member",
            "format": "double",
            "example": 1000
          },
          "operationType": {
            "$ref": "#/components/schemas/BalanceOperationType"
          }
        },
        "additionalProperties": false
      },
      "MemberAddressDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "description": "Free format address line 1",
            "nullable": true,
            "example": "Alabama street"
          },
          "line2": {
            "type": "string",
            "description": "Free format address line 2",
            "nullable": true,
            "example": "No 3 apartment 44"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "US"
          },
          "province": {
            "type": "string",
            "description": "State Provience",
            "nullable": true,
            "example": "Missouri"
          },
          "city": {
            "type": "string",
            "description": "State City",
            "nullable": true,
            "example": "New York"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "nullable": true,
            "example": "34223"
          }
        },
        "additionalProperties": false
      },
      "MemberBusinessInfoDto": {
        "required": [
          "registrationIssuedAt"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Business info description",
            "nullable": true,
            "example": "Istanbul odeme hizmetleri"
          },
          "email": {
            "type": "string",
            "description": "Contact email",
            "nullable": true,
            "example": "contact@member.com"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number",
            "nullable": true,
            "example": "+90 212 555 66 77"
          },
          "businessRegistrationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessRegistrationType"
            },
            "description": "Specifies member's business types",
            "nullable": true
          },
          "registrationIssuedByLegalOrg": {
            "type": "string",
            "description": "The name of the member's licence issuer",
            "nullable": true,
            "example": "ToNameTransfer"
          },
          "registrationIssuedByCountryCode": {
            "type": "string",
            "description": "The country of the member's licence",
            "nullable": true,
            "example": "US"
          },
          "registrationNumber": {
            "type": "string",
            "description": "The country of the member's licence number",
            "nullable": true,
            "example": "111-222-333-444"
          },
          "registrationIssuedAt": {
            "type": "string",
            "description": "Licence date",
            "format": "date",
            "example": "2021-01-25"
          },
          "registrationValidUntil": {
            "type": "string",
            "description": "Licence expire date (optional)",
            "format": "date",
            "nullable": true,
            "example": "2030-01-25"
          }
        },
        "additionalProperties": false
      },
      "MemberChannelTypeCreatedDto": {
        "type": "object",
        "properties": {
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "receiveCurrency": {
            "type": "string",
            "description": "Receive Currency",
            "nullable": true,
            "example": "TRY, USD,EUR"
          },
          "isDefaultLocalCurrency": {
            "type": "boolean",
            "description": "Is Default Local currency",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberChannelTypeUpdatedDto": {
        "type": "object",
        "properties": {
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "receiveCurrency": {
            "type": "string",
            "description": "Receive Currency",
            "nullable": true,
            "example": "TRY, USD,EUR"
          },
          "isDefaultLocalCurrency": {
            "type": "boolean",
            "description": "Is Default Local currency",
            "example": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberCreatedDto": {
        "required": [
          "memberCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Speecifies this member's code",
            "example": "bwp-aNs"
          },
          "businessName": {
            "type": "string",
            "description": "Legal business name of the member",
            "nullable": true,
            "example": "IstPay Odeme Hizmetleri A.S."
          },
          "sendAllowed": {
            "type": "boolean",
            "description": "Speecifies money send is allowed or not",
            "example": true
          },
          "receiveAllowed": {
            "type": "boolean",
            "description": "Speecifies money send is allowed or not",
            "example": true
          },
          "memberAddress": {
            "$ref": "#/components/schemas/MemberAddressDto"
          },
          "memberBusinessInfo": {
            "$ref": "#/components/schemas/MemberBusinessInfoDto"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberDto": {
        "required": [
          "branches",
          "businessName",
          "createdAt",
          "memberAddress",
          "memberBusinessInfo",
          "memberCode",
          "memberLimits",
          "receiveAllowed",
          "receiveCountryCodes",
          "sendAllowed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Member code assigned by IstPayUnionCommon",
            "example": "121212"
          },
          "receiveCountryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of member limits in different types and currencies",
            "example": [
              "US",
              "TR"
            ]
          },
          "businessName": {
            "minLength": 1,
            "type": "string",
            "description": "Legal Business name",
            "example": "IstPay Odeme Hizmetleri A.S."
          },
          "sendAllowed": {
            "type": "boolean",
            "description": "Specifies is member allowed to send money",
            "example": true
          },
          "receiveAllowed": {
            "type": "boolean",
            "description": "Specifies is member allowed to receive money",
            "example": true
          },
          "memberAddress": {
            "$ref": "#/components/schemas/MemberAddressDto"
          },
          "memberBusinessInfo": {
            "$ref": "#/components/schemas/MemberBusinessInfoDto"
          },
          "createdAt": {
            "type": "string",
            "description": "Create Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "updatedAt": {
            "type": "string",
            "description": "Update Date",
            "format": "date-time",
            "nullable": true,
            "example": "2001-05-24 14:03:28"
          },
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchDto"
            },
            "description": "Array of branches in the member"
          },
          "memberLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberLimitDto"
            },
            "description": "Array of Member Limits in the member"
          },
          "senderFeeProfileGroup": {
            "$ref": "#/components/schemas/FeeProfileGroupDto"
          },
          "receiverFeeProfileGroup": {
            "$ref": "#/components/schemas/FeeProfileGroupDto"
          }
        },
        "additionalProperties": false,
        "description": "Model For Member"
      },
      "MemberLimitCreatedDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberLimitDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          }
        },
        "additionalProperties": false,
        "description": "Model For Member Limit"
      },
      "MemberLimitGetDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          }
        },
        "additionalProperties": false
      },
      "MemberLimitUpdatedDto": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code",
            "example": "USD"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": 100000
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberUpdatedDto": {
        "required": [
          "memberCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Speecifies this member's code",
            "example": "bwp-aNs"
          },
          "businessName": {
            "type": "string",
            "description": "Legal business name of the member",
            "nullable": true,
            "example": "IstPay Odeme Hizmetleri A.S."
          },
          "sendAllowed": {
            "type": "boolean",
            "description": "Speecifies money send is allowed or not",
            "example": true
          },
          "receiveAllowed": {
            "type": "boolean",
            "description": "Speecifies money send is allowed or not",
            "example": true
          },
          "memberAddress": {
            "$ref": "#/components/schemas/MemberAddressDto"
          },
          "memberBusinessInfo": {
            "$ref": "#/components/schemas/MemberBusinessInfoDto"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NameDto": {
        "required": [
          "legalFullName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First Name",
            "nullable": true,
            "example": "Nikola"
          },
          "middleName": {
            "type": "string",
            "description": "Middle Name",
            "nullable": true,
            "example": "Michael"
          },
          "lastName": {
            "type": "string",
            "description": "Middle Name",
            "nullable": true,
            "example": "Tesla"
          },
          "legalFullName": {
            "minLength": 1,
            "type": "string",
            "description": "Full legal name",
            "example": "Nikola Michael Tesla Jr."
          }
        },
        "additionalProperties": false,
        "description": "Model for Subject Name"
      },
      "PaymentDoneCommand": {
        "required": [
          "branchCode",
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Branch Code",
            "example": "1212-0001"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          }
        },
        "additionalProperties": false
      },
      "PaymentDto": {
        "type": "object",
        "properties": {
          "transferReferenceCode": {
            "type": "string",
            "description": "Unique code of the transaction",
            "nullable": true,
            "example": "7BpS-UnjY-Poov"
          },
          "receiverLegalFullName": {
            "type": "string",
            "description": "Full name of receiver",
            "nullable": true,
            "example": "Daniel Amokachi"
          },
          "receiverPhoneNumber": {
            "type": "string",
            "description": "Phone Number for receiver customer",
            "nullable": true,
            "example": "+905554448899"
          },
          "pin": {
            "type": "string",
            "description": "Pin generated by IstPay for 2 factor authentication.",
            "nullable": true,
            "example": "952318"
          },
          "senderLegalFullName": {
            "type": "string",
            "description": "Full Legal name of sender.",
            "nullable": true,
            "example": "John Michael Smith"
          }
        },
        "additionalProperties": false
      },
      "PaymentInProgressCancelCommand": {
        "required": [
          "branchCode",
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Branch Code",
            "example": "1212-0001"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          }
        },
        "additionalProperties": false
      },
      "PaymentInProgressCommand": {
        "required": [
          "branchCode",
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Branch Code",
            "example": "1212-0001"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          },
          "pin": {
            "type": "string",
            "description": "Pin generated by IstPay for 2 factor authentication.",
            "nullable": true,
            "example": "952318"
          }
        },
        "additionalProperties": false
      },
      "PaymentReverseCommand": {
        "required": [
          "branchCode",
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Branch Code",
            "example": "1212-0001"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          }
        },
        "additionalProperties": false
      },
      "PostalAddressDto": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "description": "Free format address line 1",
            "nullable": true,
            "example": "Alabama street"
          },
          "line2": {
            "type": "string",
            "description": "Free format address line 2",
            "nullable": true,
            "example": "No 3 apartment 44"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "US"
          },
          "province": {
            "type": "string",
            "description": "State Provience",
            "nullable": true,
            "example": "Missouri"
          },
          "city": {
            "type": "string",
            "description": "State City",
            "nullable": true,
            "example": "New York"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "nullable": true,
            "example": "34223"
          }
        },
        "additionalProperties": false,
        "description": "Model for Address"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProblemDetailsDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "QueryBankTransferDto": {
        "required": [
          "amount",
          "currencyCode",
          "feeCurrency",
          "memberTransferReferenceCode",
          "receiveInCountryCode",
          "receiverLegalFullName",
          "senderCountryCode",
          "senderLegalFullName",
          "status",
          "transferDate",
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "memberTransferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction by member",
            "example": "ffabca20-9095-4222-97ae-53e1a2240001"
          },
          "senderLegalFullName": {
            "minLength": 1,
            "type": "string",
            "description": "Sender Legal Full Name",
            "example": "John Doe"
          },
          "receiverLegalFullName": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Legal Full Name",
            "example": "John Doe"
          },
          "receiverPhoneNumber": {
            "type": "string",
            "description": "Receiver Phone Number",
            "nullable": true,
            "example": "+905555555555"
          },
          "description": {
            "type": "string",
            "description": "Optional description for money transfer",
            "nullable": true,
            "example": "Payment for the dog clothes"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "amount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "senderCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Sender country code",
            "example": "TR"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "feeCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for the Fee",
            "example": "USD"
          },
          "transferDate": {
            "type": "string",
            "description": "Transfer Occurs Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "statusChanged": {
            "type": "boolean"
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReceiverCustomerDto": {
        "required": [
          "name",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameDto"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver phone number in E164 format",
            "example": "+16175551212"
          },
          "walletId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Unique Id of Wallet For tranfer to wallet. If the channel type is \"Transfer2Wallet\", then the required field",
            "nullable": true,
            "example": "15688456"
          },
          "receiverBankCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "Bank Code of receiver member's. If the channel type is \"Transfer2Iban\", then the required field",
            "nullable": true,
            "example": "300"
          },
          "receiverIban": {
            "maxLength": 48,
            "minLength": 0,
            "type": "string",
            "description": "Iban of receiver member's. If the channel type is \"Transfer2Iban\", then the required field",
            "nullable": true,
            "example": "TR0012003400560078009100"
          }
        },
        "additionalProperties": false
      },
      "SenderCustomerDto": {
        "required": [
          "birthDate",
          "name",
          "nationalityCountryCode",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameDto"
          },
          "nationalityCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Nationality of the customer",
            "example": "US"
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth",
            "format": "date",
            "example": "1980-01-25"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver phone number in E164 format",
            "example": "+16175551212"
          },
          "address": {
            "$ref": "#/components/schemas/CustomerAddressDto"
          },
          "identityInfo": {
            "$ref": "#/components/schemas/IdentityInfoDto"
          }
        },
        "additionalProperties": false
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "refreshExpiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "tokenType": {
            "type": "string",
            "nullable": true
          },
          "notBeforePolicy": {
            "type": "integer",
            "format": "int32"
          },
          "sessionState": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferCanceledDto": {
        "required": [
          "status",
          "transferReferenceCode"
        ],
        "type": "object",
        "properties": {
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          }
        },
        "additionalProperties": false
      },
      "TransferChannelType": {
        "enum": [
          "Transfer2Wallet",
          "Transfer2Name",
          "Transfer2Iban"
        ],
        "type": "string"
      },
      "TransferCreatedDto": {
        "required": [
          "feeCurrency",
          "memberTransferReferenceCode",
          "receiveAmount",
          "receiveCurrencyCode",
          "receiveInCountryCode",
          "receiverMemberCode",
          "sendAmount",
          "sendCurrencyCode",
          "senderBranchCode",
          "senderMemberCode",
          "status",
          "transferDate",
          "transferReferenceCode",
          "unionFee"
        ],
        "type": "object",
        "properties": {
          "memberTransferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Id generated by member to identify the requested transaction. Member should generate this code. This code can be used to query transaction.",
            "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
          },
          "description": {
            "type": "string",
            "description": "Optional description for money transfer",
            "nullable": true,
            "example": "Payment for the dog clothes"
          },
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money receive",
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "receiveAmount": {
            "type": "number",
            "description": "Amount to receive",
            "format": "double",
            "example": 9559.25
          },
          "senderMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "senderBranchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch code for sender",
            "example": "bwp-aNs"
          },
          "receiverMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for receiver",
            "example": "010203"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "transferReasonType": {
            "$ref": "#/components/schemas/TransferReasonType"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "feeCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for the Fee",
            "example": "USD"
          },
          "unionFee": {
            "type": "number",
            "description": "Amount for the Fee",
            "format": "double",
            "example": 10.95
          },
          "pin": {
            "type": "string",
            "description": "Pin for the Transfer",
            "nullable": true,
            "example": "LXIT-9ZBW"
          },
          "transferDate": {
            "type": "string",
            "description": "Transfer Occurs Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "senderCustomer": {
            "$ref": "#/components/schemas/SenderCustomerDto"
          },
          "receiverCustomer": {
            "$ref": "#/components/schemas/ReceiverCustomerDto"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "senderCountryCode": {
            "type": "string",
            "description": "Sender country code",
            "nullable": true,
            "example": "TR"
          }
        },
        "additionalProperties": false,
        "description": "Model for Money Transfer Response"
      },
      "TransferDto": {
        "required": [
          "feeCurrency",
          "memberTransferReferenceCode",
          "receiveAmount",
          "receiveCurrencyCode",
          "receiveInCountryCode",
          "receiverMemberCode",
          "sendAmount",
          "sendCurrencyCode",
          "senderBranchCode",
          "senderMemberCode",
          "status",
          "transferDate",
          "transferReferenceCode",
          "unionFee"
        ],
        "type": "object",
        "properties": {
          "memberTransferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Id generated by member to identify the requested transaction. Member should generate this code. This code can be used to query transaction.",
            "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
          },
          "description": {
            "type": "string",
            "description": "Optional description for money transfer",
            "nullable": true,
            "example": "Payment for the dog clothes"
          },
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money receive",
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "receiveAmount": {
            "type": "number",
            "description": "Amount to receive",
            "format": "double",
            "example": 9559.25
          },
          "senderMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "senderBranchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch code for sender",
            "example": "bwp-aNs"
          },
          "receiverMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for receiver",
            "example": "010203"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "transferReasonType": {
            "$ref": "#/components/schemas/TransferReasonType"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "feeCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for the Fee",
            "example": "USD"
          },
          "unionFee": {
            "type": "number",
            "description": "Amount for the Fee",
            "format": "double",
            "example": 10.95
          },
          "pin": {
            "type": "string",
            "description": "Pin for the Transfer",
            "nullable": true,
            "example": "LXIT-9ZBW"
          },
          "transferDate": {
            "type": "string",
            "description": "Transfer Occurs Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "senderCustomer": {
            "$ref": "#/components/schemas/SenderCustomerDto"
          },
          "receiverCustomer": {
            "$ref": "#/components/schemas/ReceiverCustomerDto"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          }
        },
        "additionalProperties": false,
        "description": "Model for Money Transfer"
      },
      "TransferFeeResponseDto": {
        "required": [
          "feeAmount",
          "feeCurrency",
          "sendAmount",
          "sendCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "feeCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for the Fee",
            "example": "USD"
          },
          "feeAmount": {
            "type": "number",
            "description": "Amount for the Fee",
            "format": "double",
            "example": 10.95
          },
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "type": "string",
            "description": "Currency Code for money receive",
            "nullable": true,
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "receiveAmount": {
            "type": "number",
            "description": "Amount to receive",
            "format": "double",
            "example": 9559.25
          },
          "currencyRateToken": {
            "type": "string",
            "description": "Currency Rate Token for the conversion\r\nThe token is stored for a few minutes",
            "nullable": true,
            "example": "9559.25"
          },
          "currencyRateTokenExpireDate": {
            "type": "string",
            "description": "Currency Rate Token Expire Date for the conversion\r\nThe token is stored for a few minutes",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model for Transfer Fee Response"
      },
      "TransferMemberBalanceManagedDto": {
        "required": [
          "currencyCode",
          "currentBalance"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "currentBalance": {
            "type": "number",
            "description": "Balance Value for member",
            "format": "double",
            "example": 1000
          }
        },
        "additionalProperties": false
      },
      "TransferMemberListDto": {
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "memberName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferPinDto": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "description": "Returns Pin generated by IstPay for 2 factor authentication.",
            "nullable": true,
            "example": "952318"
          }
        },
        "additionalProperties": false
      },
      "TransferReasonType": {
        "enum": [
          "Other",
          "HouseRent",
          "WorkPlaceRent",
          "OtherRent",
          "ECommercePayment",
          "EmployeePayment",
          "CommercePayment",
          "IndividualPayment",
          "BusinessFinancialInvestment",
          "IndividualFinancialPayment",
          "EducationPayment",
          "DuesPayment"
        ],
        "type": "string"
      },
      "TransferSearchResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransferStatus": {
        "enum": [
          "Initializing",
          "Authorized",
          "InitializeFailed",
          "Rejected",
          "Pending",
          "CanceledByProcessor",
          "BankFailed",
          "Reversed",
          "CanceledBySender",
          "InProgress",
          "Returned",
          "MoneyReceivedBySender",
          "Paid"
        ],
        "type": "string"
      },
      "TransferValidatedDto": {
        "required": [
          "feeCurrency",
          "memberTransferReferenceCode",
          "receiveAmount",
          "receiveCurrencyCode",
          "receiveInCountryCode",
          "receiverMemberCode",
          "sendAmount",
          "sendCurrencyCode",
          "senderBranchCode",
          "senderMemberCode",
          "status",
          "transferDate",
          "transferReferenceCode",
          "unionFee"
        ],
        "type": "object",
        "properties": {
          "memberTransferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Id generated by member to identify the requested transaction. Member should generate this code. This code can be used to query transaction.",
            "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
          },
          "description": {
            "type": "string",
            "description": "Optional description for money transfer",
            "nullable": true,
            "example": "Payment for the dog clothes"
          },
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money receive",
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "receiveAmount": {
            "type": "number",
            "description": "Amount to receive",
            "format": "double",
            "example": 9559.25
          },
          "senderMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "senderBranchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch code for sender",
            "example": "bwp-aNs"
          },
          "receiverMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for receiver",
            "example": "010203"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "transferReasonType": {
            "$ref": "#/components/schemas/TransferReasonType"
          },
          "transferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique code of the transaction",
            "example": "7BpS-UnjY-Poov"
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "feeCurrency": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for the Fee",
            "example": "USD"
          },
          "unionFee": {
            "type": "number",
            "description": "Amount for the Fee",
            "format": "double",
            "example": 10.95
          },
          "pin": {
            "type": "string",
            "description": "Pin for the Transfer",
            "nullable": true,
            "example": "LXIT-9ZBW"
          },
          "transferDate": {
            "type": "string",
            "description": "Transfer Occurs Date",
            "format": "date-time",
            "example": "2001-05-24 14:03:28"
          },
          "senderCustomer": {
            "$ref": "#/components/schemas/SenderCustomerDto"
          },
          "receiverCustomer": {
            "$ref": "#/components/schemas/ReceiverCustomerDto"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "senderCountryCode": {
            "type": "string",
            "description": "Sender country code",
            "nullable": true,
            "example": "TR"
          },
          "currencyRateToken": {
            "type": "string",
            "description": "Currency Rate Token for the conversion\r\nThe token is stored for a few minutes",
            "nullable": true,
            "example": " 4a7b5c60-4e4b-4de1-8f2c-5a36f2c89a6a"
          }
        },
        "additionalProperties": false
      },
      "UpdateBranchCommand": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string",
            "description": "Branch Name (max 32 char)",
            "nullable": true,
            "example": "Ist-Pay"
          },
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "description": "Branch Code of the Branch",
            "nullable": true,
            "example": "121212"
          },
          "parentBranchCode": {
            "type": "string",
            "description": "Parent Branch Code if Exists",
            "nullable": true,
            "example": "121212-00001"
          },
          "line1": {
            "type": "string",
            "description": "Free format address line 1 (max 256 char)",
            "nullable": true,
            "example": "Alabama street"
          },
          "line2": {
            "type": "string",
            "description": "Free format address line 2 (max 256 char)",
            "nullable": true,
            "example": "No 3 apartment 44"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "US"
          },
          "province": {
            "type": "string",
            "description": "State Provience",
            "nullable": true,
            "example": "Missouri"
          },
          "city": {
            "type": "string",
            "description": "Country Code (ISO 3166 1 alpha 2)",
            "nullable": true,
            "example": "St Louis"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "nullable": true,
            "example": "34223"
          },
          "latitude": {
            "type": "string",
            "description": "Latitude (2-11 char)",
            "nullable": true,
            "example": "55.875166"
          },
          "longitude": {
            "type": "string",
            "description": "Longitude (2-11 char)",
            "nullable": true,
            "example": "-5.974943"
          }
        },
        "additionalProperties": false
      },
      "UpdateBranchDto": {
        "required": [
          "branchAddress"
        ],
        "type": "object",
        "properties": {
          "parentBranchCode": {
            "type": "string",
            "description": "Parent Branch Code if Exists",
            "nullable": true,
            "example": "121212-00001"
          },
          "branchAddress": {
            "$ref": "#/components/schemas/PostalAddressDto"
          },
          "coordinate": {
            "$ref": "#/components/schemas/LatLongDto"
          }
        },
        "additionalProperties": false,
        "description": "Model for Update Branch"
      },
      "UpdateBranchLimitCommand": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "description": "Member Code.",
            "nullable": true,
            "example": "3tR5-ZKGT"
          },
          "limitType": {
            "minLength": 1,
            "type": "string",
            "description": "Limit Type"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": "100000"
          },
          "branchCode": {
            "type": "string",
            "description": "Branch Code",
            "nullable": true,
            "example": "oF5-clE"
          }
        },
        "additionalProperties": false
      },
      "UpdateFeeProfileGroupCommand": {
        "type": "object",
        "properties": {
          "feeProfileGroupCode": {
            "type": "string",
            "description": "Fee Profile Group Code",
            "nullable": true,
            "example": "K1M-hIJ"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true,
            "example": "Group1"
          },
          "feeProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeProfileCreatedDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMemberCommand": {
        "required": [
          "receiverFeeProfileGroupCode",
          "senderFeeProfileGroupCode"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "description": "Member Code. It can be given if user has permission to update this member",
            "nullable": true,
            "example": "3tR5-ZKGT"
          },
          "businessName": {
            "type": "string",
            "description": "Legal business name of the member",
            "nullable": true,
            "example": "IstPay Odeme Hizmetleri A.S."
          },
          "sendAllowed": {
            "type": "boolean",
            "description": "Speecifies money send is allowed or not",
            "example": true
          },
          "receiveAllowed": {
            "type": "boolean",
            "description": "Speecifies money receive is allowed or not",
            "example": true
          },
          "memberAddress": {
            "$ref": "#/components/schemas/MemberAddressDto"
          },
          "memberBusinessInfo": {
            "$ref": "#/components/schemas/MemberBusinessInfoDto"
          },
          "senderFeeProfileGroupCode": {
            "minLength": 1,
            "type": "string",
            "description": "Sender Profile Group Code",
            "example": "tZH-c9f"
          },
          "receiverFeeProfileGroupCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receiver Profile Group",
            "example": "6gE-XPR"
          }
        },
        "additionalProperties": false
      },
      "UpdateMemberLimitCommand": {
        "required": [
          "currencyCode",
          "limitType",
          "totalLimit"
        ],
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "description": "Member Code.",
            "nullable": true,
            "example": "3tR5-ZKGT"
          },
          "limitType": {
            "$ref": "#/components/schemas/LimitType"
          },
          "currencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code"
          },
          "totalLimit": {
            "type": "number",
            "description": "Total limit",
            "format": "double",
            "example": "100000"
          }
        },
        "additionalProperties": false
      },
      "ValidateTransfer2WalletResponseDto": {
        "required": [
          "isValid"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ValidateTransferCommand": {
        "required": [
          "channelType",
          "memberTransferReferenceCode",
          "receiveAmount",
          "receiveCurrencyCode",
          "receiveInCountryCode",
          "receiverCustomer",
          "receiverMemberCode",
          "sendAmount",
          "sendCurrencyCode",
          "senderBranchCode",
          "senderCustomer",
          "senderMemberCode"
        ],
        "type": "object",
        "properties": {
          "memberTransferReferenceCode": {
            "minLength": 1,
            "type": "string",
            "description": "Unique Id generated by member to identify the requested transaction. Member should generate this code. This code can be used to query transaction.",
            "example": "ffabca20-9095-4221-97ae-53e1a224f02e"
          },
          "description": {
            "type": "string",
            "description": "Optional description for money transfer",
            "nullable": true,
            "example": "Payment for the dog clothes"
          },
          "sendCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money send",
            "example": "USD"
          },
          "receiveCurrencyCode": {
            "minLength": 1,
            "type": "string",
            "description": "Currency Code for money receive",
            "example": "USD"
          },
          "sendAmount": {
            "type": "number",
            "description": "Amount to send",
            "format": "double",
            "example": 9559.25
          },
          "receiveAmount": {
            "type": "number",
            "description": "Amount to receive",
            "format": "double",
            "example": 9559.25
          },
          "senderMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for sender",
            "example": "bwp-aNs"
          },
          "senderBranchCode": {
            "minLength": 1,
            "type": "string",
            "description": "Branch code for sender",
            "example": "bwp-aNs"
          },
          "receiverMemberCode": {
            "minLength": 1,
            "type": "string",
            "description": "Member code for receiver",
            "example": "010203"
          },
          "receiveInCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Receive in country code",
            "example": "US"
          },
          "transferReasonType": {
            "$ref": "#/components/schemas/TransferReasonType"
          },
          "generatePin": {
            "type": "boolean",
            "description": "2 factor authentication preference",
            "nullable": true,
            "example": true
          },
          "senderCustomer": {
            "$ref": "#/components/schemas/SenderCustomerDto"
          },
          "receiverCustomer": {
            "$ref": "#/components/schemas/ReceiverCustomerDto"
          },
          "channelType": {
            "$ref": "#/components/schemas/TransferChannelType"
          },
          "currencyRateToken": {
            "type": "string",
            "description": "Currency Rate Token for the conversion\r\nThe token is stored for a few minutes\r\nIf you fill this area you will get the currency rate token. So you can use\r\ncurrency rate for a few minutes.",
            "nullable": true,
            "example": " 4a7b5c60-4e4b-4de1-8f2c-5a36f2c89a6a"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}